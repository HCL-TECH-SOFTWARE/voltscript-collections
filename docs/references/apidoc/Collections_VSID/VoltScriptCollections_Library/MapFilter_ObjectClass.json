{"classname":"MapFilter","comment":"Class for filtering elements when filtering a Map","valuetype":"","filenamebase":"MapFilter_ObjectClass","fqnprefix":"Collections.VoltScriptCollections","qn":"MapFilter","codesample":"%REM\nThe following code filters out values that are odd numbers\n%END REM\nClass EvenFilter as MapFilter\n    Function filter(kvPair as Pair) as Boolean\n        Dim value as Integer\n        value = kvPair.value\n        Return value Mod 2 = 0\n    End Function\nEnd Class\nDim map as New Map(&amp;quot;INTEGER&amp;quot;, Nothing, False)\nDim ef as New EvenFilter\nDim map2 as Map\nCall map.put(&amp;quot;Elem1&amp;quot;, 1)\nCall map.put(&amp;quot;Elem2&amp;quot;, 2)\nCall map.put(&amp;quot;Elem3&amp;quot;, 3)\nCall map.put(&amp;quot;Elem4&amp;quot;, 4)\nSet map2 = map.filter(ef)\nPrint map2.elementCount","signaturecode":3072,"instancecode":1024,"classtype":"Base","projectid":"FD17E29641C6117580258994003AF3B0","version":3,"classid":"881D17BDD6F1A9D58025899600497486","signature":"Public Class MapFilter","modifiers":"Public","classname":"MapFilter","parentclassname":"None","constructorsignature":"Public Sub New()","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Class for filtering elements when filtering a Map&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Class for filtering elements when filtering a Map","inlinecomment":" \t &amp;apos; Class for filtering elements when filtering a Map","codesamplehtml":"%REM&amp;lt;br /&amp;gt;The following code filters out values that are odd numbers&amp;lt;br /&amp;gt;%END REM&amp;lt;br /&amp;gt;Class EvenFilter as MapFilter&amp;lt;br /&amp;gt;    Function filter(kvPair as Pair) as Boolean&amp;lt;br /&amp;gt;        Dim value as Integer&amp;lt;br /&amp;gt;        value = kvPair.value&amp;lt;br /&amp;gt;        Return value Mod 2 = 0&amp;lt;br /&amp;gt;    End Function&amp;lt;br /&amp;gt;End Class&amp;lt;br /&amp;gt;Dim map as New Map(&amp;quot;INTEGER&amp;quot;, Nothing, False)&amp;lt;br /&amp;gt;Dim ef as New EvenFilter&amp;lt;br /&amp;gt;Dim map2 as Map&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem1&amp;quot;, 1)&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem2&amp;quot;, 2)&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem3&amp;quot;, 3)&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem4&amp;quot;, 4)&amp;lt;br /&amp;gt;Set map2 = map.filter(ef)&amp;lt;br /&amp;gt;Print map2.elementCount", "methods":[{"label":"filter","comment":"Function to filter a Map&amp;apos;s keys or values","valuetype":"Boolean","filenamebase":"filter_Method","fqnprefix":"Collections.VoltScriptCollections.MapFilter","qn":"filter","codesample":"%REM\nThe following code filters out values that are odd numbers\n%END REM\nClass EvenFilter as MapFilter\n    Function filter(kvPair as Pair) as Boolean\n        Dim value as Integer\n        value = kvPair.value\n        Return value Mod 2 = 0\n    End Function\nEnd Class\nDim map as New Map(&amp;quot;INTEGER&amp;quot;, Nothing, False)\nDim ef as New EvenFilter\nDim map2 as Map\nCall map.put(&amp;quot;Elem1&amp;quot;, 1)\nCall map.put(&amp;quot;Elem2&amp;quot;, 2)\nCall map.put(&amp;quot;Elem3&amp;quot;, 3)\nCall map.put(&amp;quot;Elem4&amp;quot;, 4)\nSet map2 = map.filter(ef)\nPrint map2.elementCount","signaturecode":2112,"instancecode":64,"f_returnsobject":1,"argumentsuffix":"(kvPair As Pair)","signature":"Public Function filter(kvPair As Pair) As Boolean","modifiers":"Public","commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Function to filter a Map&amp;apos;s keys or values&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Function to filter a Map&amp;apos;s keys or values","inlinecomment":" \t &amp;apos; Function to filter a Map&amp;apos;s keys or values","parentclassname":"MapFilter","codesamplehtml":"%REM&amp;lt;br /&amp;gt;The following code filters out values that are odd numbers&amp;lt;br /&amp;gt;%END REM&amp;lt;br /&amp;gt;Class EvenFilter as MapFilter&amp;lt;br /&amp;gt;    Function filter(kvPair as Pair) as Boolean&amp;lt;br /&amp;gt;        Dim value as Integer&amp;lt;br /&amp;gt;        value = kvPair.value&amp;lt;br /&amp;gt;        Return value Mod 2 = 0&amp;lt;br /&amp;gt;    End Function&amp;lt;br /&amp;gt;End Class&amp;lt;br /&amp;gt;Dim map as New Map(&amp;quot;INTEGER&amp;quot;, Nothing, False)&amp;lt;br /&amp;gt;Dim ef as New EvenFilter&amp;lt;br /&amp;gt;Dim map2 as Map&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem1&amp;quot;, 1)&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem2&amp;quot;, 2)&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem3&amp;quot;, 3)&amp;lt;br /&amp;gt;Call map.put(&amp;quot;Elem4&amp;quot;, 4)&amp;lt;br /&amp;gt;Set map2 = map.filter(ef)&amp;lt;br /&amp;gt;Print map2.elementCount", "signatureelements":["Public","Function"], "arguments":[{"label":"kvPair","comment":"Pair containg the key and value for the current element in the Map","valuetype":"Pair","filenamebase":"kvPair_ValuedElement","fqnprefix":"CollectionsVoltScriptCollectionsMapFilterfilter","qn":"kvPair","argumentindex":1,"commentblock":"&amp;lt;div class=&amp;quot;description&amp;quot;&amp;gt;\t&amp;lt;ul class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t&amp;lt;li class=&amp;quot;blockList&amp;quot;&amp;gt;\t\t\t&amp;lt;div class=&amp;quot;comments&amp;quot;&amp;gt;&amp;lt;!-- comment --&amp;gt;&amp;lt;pre&amp;gt;Pair containg the key and value for the current element in the Map&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;\t\t\t&amp;lt;hr /&amp;gt;\t\t&amp;lt;/li&amp;gt;\t&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;","commenthtml":"Pair containg the key and value for the current element in the Map","inlinecomment":" \t &amp;apos; Pair containg the key and value for the current element in the Map"}]},{"label":"New","comment":"","valuetype":"","filenamebase":"New_Method","fqnprefix":"Collections.VoltScriptCollections.MapFilter","qn":"New","codesample":"","signaturecode":2080,"instancecode":32,"f_returnsobject":0,"argumentsuffix":"()","signature":"Public Sub New()","modifiers":"Public","commentblock":"","commenthtml":"","inlinecomment":"","parentclassname":"MapFilter","codesamplehtml":"", "signatureelements":["Public","Sub"]}]}
